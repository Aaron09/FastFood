package com.aarongreen.fastfood.MainActivityFiles;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.location.Location;
import android.location.LocationManager;
import android.os.Build;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import com.aarongreen.fastfood.DestinationActivityFiles.DestinationActivity;
import com.aarongreen.fastfood.R;

/**
 * The MainActivity of the application, allowing the user to click a button and then opening
 * the intent showing the nearby destinations / restaurants
 */
public class MainActivity extends AppCompatActivity {

    public static final String LOCATION_KEY = "LOCATION";

    private static final String SECURITY_EXCEPTION_TAG = "SEC";
    private static final String SECURITY_EXCEPTION_DESCRIPTION = "Security Exception Occured.";
    private static final int REQUEST_CODE = 0;

    private Button retrieveDestinationsButton;
    private LocationManager locationManager;
    private Location currentLocation;

    /**
     *
     * onCreate connects the UI elements, then checks to see if the Android APK version of the
     * device requires permissions requesting. If so, the request is made, then the button is
     * configured. Otherwise the button is immediately configured.
     *
     * @param savedInstanceState the current saved instance state of the activity
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        retrieveDestinationsButton = (Button) findViewById(R.id.retrieveDestinationsButton);

        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);

        // checks the SDK of the android device and requests permissions if necessary
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {

            // only requests permissions if we do not already have permission
            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)
                    != PackageManager.PERMISSION_GRANTED &&
                    ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)
                    != PackageManager.PERMISSION_GRANTED) {
                requestPermissions(new String[]{
                        Manifest.permission.INTERNET,
                        Manifest.permission.ACCESS_FINE_LOCATION,
                        Manifest.permission.ACCESS_COARSE_LOCATION,
                }, REQUEST_CODE);
            } else {
                configureDestinationButton();
            }
        } else {
            configureDestinationButton();
        }
    }

    /**
     *
     * This occurs when the APK of the Android device requires permission granting for accessing
     * the location.
     *
     * @param requestCode the request code of the location accessing permission request
     * @param permissions the list of permissions requested
     * @param grantResults the success status of the permissions request
     *
     */
    @Override
    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
        final int MIN_RESULTS_SIZE = 0;
        final int PERMISSION_GRANTED_INDEX = 0;
        if (requestCode == REQUEST_CODE && grantResults.length > MIN_RESULTS_SIZE &&
                grantResults[PERMISSION_GRANTED_INDEX] == PackageManager.PERMISSION_GRANTED) {
            configureDestinationButton();
        }
    }

    /**
     * Sets the onClick listener which gets the last known location and starts the
     * destination intent, passing the received location object from the last known location
     * request.
     *
     * This must be called either during onCreate if the Android device's APK version is below the
     * version which does not require special permissions to access location, or after the
     * permission has been granted if the version does require location validation.
     */
    public void configureDestinationButton() {
        retrieveDestinationsButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                try {
                    currentLocation = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
                    Intent intent = new Intent(view.getContext(), DestinationActivity.class);
                    intent.putExtra(LOCATION_KEY, currentLocation);
                    view.getContext().startActivity(intent);
                } catch (SecurityException e) {
                    // don't request locations
                    Log.e(SECURITY_EXCEPTION_TAG, SECURITY_EXCEPTION_DESCRIPTION);
                }
            }
        });
    }
}
